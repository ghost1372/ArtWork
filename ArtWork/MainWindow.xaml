<controls:BlurWindow x:Class="ArtWork.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:controls="https://handyorg.github.io/handycontrol"
                     xmlns:langs="clr-namespace:ArtWork.Properties.Langs"
                     xmlns:local="clr-namespace:ArtWork"
                     Style="{StaticResource WindowBlur}"
                     BorderThickness="1"
                     BorderBrush="#262e2f"
                     CloseButtonForeground="{StaticResource DangerBrush}"
                     NonClientAreaBackground="#262e2f"
                     NonClientAreaForeground="White"
                     OtherButtonHoverBackground="#888580"
                     OtherButtonHoverForeground="White"
                     OtherButtonForeground="White"
                     ShowTitle="True"
                     mc:Ignorable="d"
                     Name="main"
                     FontFamily="{StaticResource ArtWork.Fonts.IRANSans}"
                     DataContext="{StaticResource MainViewModel}"
                     Icon="Resources\Img\logo.ico"
                     Title="{x:Static langs:Lang.ArtWork}" Height="650" Width="1250">

    <controls:Window.NonClientAreaContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal">
                <Button Margin="4,0,0,0" Width="28" Height="29" Style="{StaticResource ButtonCustom}">
                    <controls:Interaction.Triggers>
                        <controls:EventTrigger EventName="Click">
                            <controls:InvokeCommandAction Command="{x:Static SystemCommands.ShowSystemMenuCommand}" />
                        </controls:EventTrigger>
                        <controls:EventTrigger EventName="MouseDoubleClick">
                            <controls:InvokeCommandAction Command="{x:Static SystemCommands.CloseWindowCommand}" />
                        </controls:EventTrigger>
                    </controls:Interaction.Triggers>
                    <Path Height="16" Fill="White" Stretch="Uniform" Data="{StaticResource LogoGeometry}"/>
                </Button>
                <Menu Margin="10,0,0,0" Background="Transparent">
                    <MenuItem Foreground="White" Header="{x:Static langs:Lang.Downloader}">
                        <MenuItem Header="{x:Static langs:Lang.MenuDownload}" Click="DownloaderMenu">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource DownloadGeometry}" Fill="{DynamicResource PrimaryTextBrush}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Foreground="White" Header="{x:Static langs:Lang.MenuConfig}">
                        <MenuItem Click="ChangePathMenu" Header="{x:Static langs:Lang.Path}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource ConfigGeometry}" Fill="{DynamicResource PrimaryTextBrush}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static langs:Lang.Langu}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource WindowsGeometry}" Fill="{DynamicResource PrimaryTextBrush}"/>
                            </MenuItem.Icon>
                            <MenuItem Tag="fa-ir" Click="ChangeLanguageMenu" Header="{x:Static langs:Lang.Persian}">
                                <MenuItem.Icon>
                                    <Image Width="32" Source="/ArtWork;component/Resources/Img/iran.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Tag="en-us" Click="ChangeLanguageMenu" Header="{x:Static langs:Lang.US}">
                                <MenuItem.Icon>
                                    <Image Width="32" Source="/ArtWork;component/Resources/Img/usa.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Foreground="White" Header="{x:Static langs:Lang.MenuAbout}">

                        <MenuItem Command="controls:ControlCommands.OpenLink" CommandParameter="mailto:mahdidvb72@gmail.com" Header="{x:Static langs:Lang.MenuEmail}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource EmailGeometry}" Fill="{DynamicResource WarningBrush}"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Click="CheckUpdateMenu" Header="{x:Static langs:Lang.MenuUpdate}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource GithubGeometry}" Fill="{DynamicResource PrimaryBrush}"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Click="AboutMenu" Header="{x:Static langs:Lang.MenuAboutWindow}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource InfoGeometry}" Fill="{DynamicResource SuccessBrush}"/>
                            </MenuItem.Icon>
                        </MenuItem>

                    </MenuItem>
                </Menu>
            </StackPanel>
            <Button Grid.Column="1" Click="ButtonConfig_OnClick" Name="ButtonConfig" Style="{StaticResource ButtonIcon}" controls:IconElement.Geometry="{StaticResource ConfigGeometry}"/>
            <Popup AllowsTransparency="True" Grid.Column="1" PlacementTarget="{Binding ElementName=ButtonConfig}" HorizontalOffset="-25" Name="PopupConfig" VerticalOffset="6" StaysOpen="False">
                <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="4" Margin="16" Effect="{StaticResource EffectShadow2}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Button.Click="ButtonLangs_OnClick" Margin="10,10,0,10">
                            <Button Tag="en-us" Style="{StaticResource ButtonCustom}">
                                <Image Width="32" Source="/ArtWork;component/Resources/Img/usa.png"/>
                            </Button>
                            <Button Tag="fa-ir" Style="{StaticResource ButtonCustom}" Margin="0,10,0,0">
                                <Image Width="32" Source="/ArtWork;component/Resources/Img/iran.png"/>
                            </Button>
                        </StackPanel>
                        <StackPanel Button.Click="ButtonSkins_OnClick"  Margin="10,10,10,10">
                            <Button Tag="{x:Static controls:SkinType.Default}" Style="{StaticResource ButtonCustom}">
                                <Border Background="White" Width="32" Height="21" CornerRadius="2" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"/>
                            </Button>
                            <Button Tag="{x:Static controls:SkinType.Dark}" Style="{StaticResource ButtonCustom}" Margin="0,10,0,0">
                                <Border Background="Black" Width="32" Height="21" CornerRadius="2" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"/>
                            </Button>
                            <Button Tag="{x:Static controls:SkinType.Violet}" Style="{StaticResource ButtonCustom}" Margin="0,10,0,0">
                                <Border Background="DarkViolet" Width="32" Height="21" CornerRadius="2" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </controls:Window.NonClientAreaContent>

    <controls:TransitioningContentControl>
        <Grid>
            <TabControl Background="Transparent" Name="tab" SelectionChanged="TabControl_SelectionChanged" Margin="0,10" Style="{StaticResource TabControlCapsuleSolid}">
                <TabItem Header="{x:Static langs:Lang.TabMain}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>

                        <GridSplitter Grid.Column="0" IsEnabled="False" HorizontalAlignment="Right" Width="5" Background="Transparent" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource BorderBrush}"/>

                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="120"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Margin="5,5,10,0" Grid.Row="0">
                                <ToggleButton Style="{DynamicResource ToggleButtonPrimary}" Checked="ButtonNude_Checked" Unchecked="ButtonNude_Checked" Name="ButtonNude" Content="{x:Static langs:Lang.NudeFilter}" Margin="0,5,0,0" HorizontalAlignment="Stretch"/>
                                <ComboBox Background="Transparent" SelectionChanged="CmbFilter_SelectionChanged" Style="{StaticResource ComboBoxExtend}" Name="cmbFilter" SelectedIndex="0" controls:InfoElement.Placeholder="{x:Static langs:Lang.ComboSearchItem}"  Margin="0,5,0,0">
                                    <ComboBoxItem Content="{x:Static langs:Lang.Artist}"/>
                                    <ComboBoxItem Content="{x:Static langs:Lang.City}"/>
                                    <ComboBoxItem Content="{x:Static langs:Lang.Country}"/>
                                    <ComboBoxItem Content="{x:Static langs:Lang.Gallery}"/>
                                    <ComboBoxItem Content="{x:Static langs:Lang.Title}"/>
                                </ComboBox>
                                <controls:TextBox Background="Transparent" Height="35" TextChanged="TxtSearch_TextChanged" Margin="0,5,0,0" Name="txtSearch" HorizontalAlignment="Stretch">
                                    <controls:TextBox.Style>
                                        <Style BasedOn="{StaticResource TextBoxExtend}" TargetType="controls:TextBox">
                                            <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInArtists}" />
                                            <!-- Here is the 'normal' content -->
                                            <Style.Triggers>
                                                <!-- Here is how we bind to another control's property -->
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="0">
                                                    <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInArtists}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="1">
                                                    <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInCity}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="2">
                                                    <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInCountry}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="3">
                                                    <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInGallery}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="4">
                                                    <Setter Property="controls:InfoElement.Placeholder" Value="{x:Static langs:Lang.SearchInTitle}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:TextBox.Style>
                                </controls:TextBox>
                            </StackPanel>

                            <ListBox FlowDirection="LeftToRight" ItemsSource="{Binding ArtistNames}" Style="{StaticResource ListBoxTransparent}" BorderThickness="0" Margin="0,0,5,0" Grid.Row="1" Name="listbox" SelectionMode="Single" SelectionChanged="Listbox_SelectionChanged">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{Binding Name}" />
                                            <TextBlock Visibility="Collapsed" Text="{Binding Tag}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                        </Grid>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Grid.Row="0">
                                <controls:Shield Name="shTitle" Subject="{x:Static langs:Lang.Title}" Margin="4,0,0,0" Color="{DynamicResource DarkPrimaryBrush}" Command="controls:ControlCommands.OpenLink" CommandParameter="{Binding ElementName=shTitle, Path=Status, StringFormat='https://google.com/search?q=  {0:N}'}"/>
                                <controls:Shield Name="shSubject" Subject="{x:Static langs:Lang.Artist}" Margin="4,0,0,0" Color="{DynamicResource DarkSuccessBrush}" Command="controls:ControlCommands.OpenLink" CommandParameter="{Binding ElementName=shSubject, Path=Status, StringFormat='https://google.com/search?q=  {0:N}'}"/>
                                <controls:Shield Name="shGallery" Subject="{x:Static langs:Lang.Gallery}" Margin="4,0,0,0" Color="{DynamicResource DarkWarningBrush}" Command="controls:ControlCommands.OpenLink" CommandParameter="{Binding ElementName=shGallery, Path=Status, StringFormat='https://google.com/search?q=  {0:N}'}"/>
                                <controls:Shield Name="shCity" Subject="{x:Static langs:Lang.City}" Margin="4,0,0,0" Color="{DynamicResource InfoBrush}"/>
                                <controls:Shield Name="shCountry" Subject="{x:Static langs:Lang.Country}" Margin="4,0,0,0" Color="{DynamicResource InfoBrush}"/>
                                <controls:Shield Name="shDate" Subject="{x:Static langs:Lang.Date}" Margin="4,0,0,0" Color="{DynamicResource DangerBrush}"/>
                                <controls:Shield Name="shItems" Subject="{x:Static langs:Lang.NumberOfItems}" Status="{Binding ElementName=cover,Path=Items.Count}" Margin="4,0,0,0" Color="{DynamicResource PrimaryBrush}"/>
                                <Button Width="120" Click="CancelTaskButton_Click" Margin="4,0,0,0" Name="cancelTaskButton" Content="{x:Static langs:Lang.CancelTask}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonDanger}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <!-- Here is how we bind to another control's property -->
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="1">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="2">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="4">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>

                            <controls:CoverView Tag="{Binding TagName}" ItemsSource="{Binding Images}" Grid.Row="1" HorizontalAlignment="Stretch" Name="cover" ItemWidth="160" ItemHeight="160">
                                <controls:CoverView.ItemHeaderTemplate>
                                    <DataTemplate>
                                        <Image Name="ImageHeader" Tag="{Binding TagName}" Source="{Binding ImageSource}">
                                            <Image.ContextMenu>
                                                <ContextMenu  FontFamily="{StaticResource ArtWork.Fonts.IRANSans}">
                                                    <MenuItem Name="xcv" Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.SetasDesktop}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.GoToLoc}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.FullScreenSee}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.Fav}"/>
                                                </ContextMenu>
                                            </Image.ContextMenu>
                                        </Image>
                                    </DataTemplate>
                                </controls:CoverView.ItemHeaderTemplate>
                                <!--<controls:CoverView.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="10">
                            <Image Stretch="Uniform" Source="{Binding ImageSource}"/>
                        </Border>
                    </DataTemplate>
                </controls:CoverView.ItemTemplate>-->
                                <controls:CoverView.ItemContainerStyle>
                                    <Style TargetType="controls:CoverViewItem" BasedOn="{StaticResource CoverViewItemBaseStyle}">
                                        <EventSetter Event="Selected" Handler="Cv_Selected"/>
                                        <EventSetter Event="MouseDoubleClick" Handler="Cv_MouseDoubleClick"/>
                                    </Style>
                                </controls:CoverView.ItemContainerStyle>
                            </controls:CoverView>
                            <ProgressBar FlowDirection="LeftToRight" Margin="0,0,5,0" Grid.Row="1" Value="0" Name="prg" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                                <ProgressBar.Style>
                                    <Style BasedOn="{StaticResource ProgressBarInfo}" TargetType="ProgressBar">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedIndex, ElementName=cmbFilter}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static langs:Lang.TabFav}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Grid.Row="0">
                            <Button Width="120" Click="CancelTaskButton_Click" Margin="4,0,0,0" Name="cancelTaskButtonFav" Content="{x:Static langs:Lang.CancelTask}" Style="{StaticResource ButtonDanger}"/>
                            <Button Width="240" Click="SetAsDesktopRandom_Click" Margin="4,0,0,0" Name="SetAsDesktopRandom" Content="{x:Static langs:Lang.SetDesktopRandom}" Style="{StaticResource ButtonWarning}"/>
                        </StackPanel>
                        <controls:CoverView Tag="{Binding TagName}" ItemsSource="{Binding FavoriteImages}" ItemContentHeightFixed="True" Grid.Row="1" HorizontalAlignment="Stretch" Name="coverFav" ItemWidth="160" ItemHeight="160">
                            <controls:CoverView.ItemHeaderTemplate>
                                <DataTemplate>
                                    <ToggleButton Checked="ToggleButton_Checked" Unchecked="ToggleButton_Checked" Tag="{Binding TagName}" Background="Transparent" Width="160" Height="160" BorderBrush="{DynamicResource DangerBrush}">
                                        <Image Name="ImageHeader" Tag="{Binding TagName}" Source="{Binding ImageSource}">
                                            <Image.ContextMenu>
                                                <ContextMenu  FontFamily="{StaticResource ArtWork.Fonts.IRANSans}">
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.SetasDesktop}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.GoToLoc}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.FullScreenSee}"/>
                                                    <MenuItem Tag="{Binding TagName}" Click="CoverContextMenu_Click" Header="{x:Static langs:Lang.RemoveFromFav}"/>
                                                </ContextMenu>
                                            </Image.ContextMenu>
                                        </Image>
                                        <ToggleButton.Style>
                                            <Style BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="ToggleButton">
                                                <Setter Property="BorderThickness" Value="0"></Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="BorderThickness" Value="1" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </DataTemplate>
                            </controls:CoverView.ItemHeaderTemplate>
                            <controls:CoverView.ItemContainerStyle>
                                <Style TargetType="controls:CoverViewItem" BasedOn="{StaticResource CoverViewItemBaseStyle}">
                                    <EventSetter Event="MouseDoubleClick" Handler="CoverViewItem_MouseDoubleClick"/>
                                </Style>
                            </controls:CoverView.ItemContainerStyle>
                        </controls:CoverView>
                    </Grid>

                </TabItem>
            </TabControl>
            <controls:ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Right" IsEnableInertia="True" IsPenetrating="True">
                <StackPanel controls:Growl.GrowlParent="True" VerticalAlignment="Top" Margin="0,10,10,10"/>
            </controls:ScrollViewer>
        </Grid>
    </controls:TransitioningContentControl>
</controls:BlurWindow>
